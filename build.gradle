plugins {
    id 'java'
    id 'io.qameta.allure' version '2.10.0'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

allure {
    report {
        version.set("2.19.0")
    }
    adapter { // отвечает за появление папочки build/allure-results
        aspectjWeaver.set(true) //обработка аннотации @Step
        frameworks {
            junit5 { //название фреймворка
                adapterVersion.set("2.19.0") //версия интеграции фреймворка и Allure
            }
        }
    }
}

dependencies {
    runtimeOnly 'org.aspectj:aspectjweaver:1.9.22.1'
    testImplementation 'org.slf4j:slf4j-simple:2.0.6'
    testImplementation 'com.codeborne:selenide:7.3.2'
    testImplementation 'com.github.javafaker:javafaker:1.0.2'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testImplementation 'com.codeborne:pdf-test:1.5.0'
    testImplementation 'com.codeborne:xls-test:1.4.3'
    testImplementation 'com.opencsv:opencsv:5.7.1'
    testImplementation 'com.google.code.gson:gson:2.10.1'
    testImplementation  'io.qameta.allure:allure-selenide:2.19.0'
    testImplementation  'org.aeonbits.owner:owner:1.0.4'

}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

test {
    useJUnitPlatform()

}

task simple_test(type: Test) {
    useJUnitPlatform {
        includeTags("simple")
    }
}

task remote_test(type: Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform {
        includeTags("Remote")
    }
}
task temp_test(type: Test) {
    useJUnitPlatform {
        includeTags("Temporary")
    }
}
